The following procedures have been tested on several linux machines with different kernel versions.
However, it does not mean our spectool overcomes the kernel dependency problem. It is just the concise-version TauRoast experiment does not involve activities sensitive to the kernel.

Test Machines:
My CentOS 6.5 Profile (Latest 64 bit (3.15.4-x86_64-linode45))
My CentOS 6.5 Profile (2.6.32.12-x86_64-linode15)
Arch Linux 3.15.5-2-ARCH
centos 5.10 + 2.6.18-371.4.1.el5

Strict Computing Environment Requirement:
kernel version: 2.6.18-371.4.1.el5
hardware platform: x86_64
operating system: GNU/Linux
Linux Distribution: Red Hat 5.10

Software Dependencies:
python >= 2.6
git
gcc
gcc-c++
zlib-devel

Currently, the specification and spectool is inside one special branch named `spectool` of my github (cctools.git).
Note: the following commands uses bash/sh shell; if you uses csh/tcsh, please change it.
cd ~
mkdir code_cctools
cd code_cctools
git clone https://github.com/hmeng-19/cctools.git
cd cctools
git pull
git checkout -b spectool -t origin/spectool
./configure --prefix ~/cctools
make clean
make install
export PATH=${PATH}:~/cctools/bin/

Now we can enter into ~/code_cctools/spectool and test TauRoast using spectool which is based on parrot or chroot:
cd ~/code_cctools/cctools/spectool

Check the help document of spectool:
python spectool -h

Usage: spectool [options] run/setup/localize/merge/diff [spec_1] [spec_2]

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -c CONFIG, --config=CONFIG
                        The specification json file
  -s SANDBOX, --sandbox=SANDBOX
                        The path of sandbox
  -m METHOD, --method=METHOD
                        Repeat method (chroot:require root account; parrot:
                        does not require root account.)
  --source=SOURCE       The specification source.
  --target=TARGET       The specification destination.

Using parrot method:
python spectool -c package.json -s test -m parrot run
Using chroot method:
python spectool -c package.json -s test_chroot -m chroot run
