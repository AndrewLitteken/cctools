The documentation illustrates how to use different execution engines of Umbrella to execute
a ray-tracing application.

#parrot execution engine test command.
umbrella \
--spec povray.umbrella \
--meta http://ccl.cse.nd.edu/software/umbrella/database/packages.json \
--localdir /tmp/umbrella_test/ \
--output "/tmp/frame000.png=/tmp/umbrella_test/parrot_povray/output.png" \
--sandbox_mode parrot \
--log umbrella.log \
run

#Docker execution engine test command. Don't do the docker test under your afs,
#it will fail due to the ACL of your afs.
umbrella \
--spec povray.umbrella \
--meta http://ccl.cse.nd.edu/software/umbrella/database/packages.json \
--localdir /tmp/umbrella_test/ \
--output "/tmp/frame000.png=/tmp/umbrella_test/docker_povray/output.png" \
--sandbox_mode docker \
--log umbrella.log \
run

umbrella \
--spec povray.umbrella \
--meta http://ccl.cse.nd.edu/software/umbrella/database/packages.json \
expand povray_S.umbrella

umbrella \
--spec povray_S.umbrella \
--localdir /tmp/umbrella_test/ \
--output "/tmp/frame000.png=/tmp/umbrella_test/parrot_povray_S/output.png" \
--sandbox_mode parrot \
--log umbrella.log \
run

umbrella \
--spec povray_S.umbrella \
--localdir /tmp/umbrella_test/ \
--output /tmp/umbrella_test/docker_povray_S \
--output "/tmp/frame000.png=/tmp/umbrella_test/docker_povray_S/output.png" \
--sandbox_mode docker \
--log umbrella.log \
run

umbrella \
--spec povray_S.umbrella \
--localdir /tmp/umbrella_test/ \
--output /tmp/umbrella_test/destructive_povray_S \
--output "/tmp/frame000.png=/tmp/umbrella_test/destructive_povray_S/output.png" \
--sandbox_mode destructive \
--log umbrella.log \
run

umbrella \
--spec povray_S.umbrella \
--localdir /tmp/umbrella_test/ \
--output "/tmp/frame000.png=/tmp/umbrella_test/ec2_povray_S/output.png" \
--sandbox_mode ec2 \
--ec2_log umbrella.log.ec2 \
--ec2_sshkey ~/bin/feb272015.pem \
--ec2_key feb272015 \
--ec2_instance_type m3.medium \
--log umbrella.log \
run
